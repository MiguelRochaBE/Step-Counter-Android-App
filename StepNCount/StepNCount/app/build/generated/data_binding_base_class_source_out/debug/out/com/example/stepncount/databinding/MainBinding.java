// Generated by view binder compiler. Do not edit!
package com.example.stepncount.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.stepncount.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonConnect;

  @NonNull
  public final Button buttonDisconnect;

  @NonNull
  public final Button buttonGetAcc;

  @NonNull
  public final Button buttonGetDeviceId;

  @NonNull
  public final Button buttonGetRTC;

  @NonNull
  public final Button buttonRequestData;

  @NonNull
  public final Button buttonSearch;

  @NonNull
  public final Button buttonSetLabel;

  @NonNull
  public final Button buttonSetRTC;

  @NonNull
  public final TextView lblACC;

  @NonNull
  public final TextView lblBAT;

  @NonNull
  public final TextView lblButton;

  @NonNull
  public final TextView lblData;

  @NonNull
  public final TextView lblDeviceId;

  @NonNull
  public final TextView lblECG;

  @NonNull
  public final TextView lblHR;

  @NonNull
  public final TextView lblLog;

  @NonNull
  public final TextView lblPulse;

  @NonNull
  public final TextView lblRTC;

  @NonNull
  public final TextView lblSDCARD;

  @NonNull
  public final TextView lblStatus;

  @NonNull
  public final TextView lblTimeSpan;

  @NonNull
  public final TextView textRadioEvent;

  private MainBinding(@NonNull LinearLayout rootView, @NonNull Button buttonConnect,
      @NonNull Button buttonDisconnect, @NonNull Button buttonGetAcc,
      @NonNull Button buttonGetDeviceId, @NonNull Button buttonGetRTC,
      @NonNull Button buttonRequestData, @NonNull Button buttonSearch,
      @NonNull Button buttonSetLabel, @NonNull Button buttonSetRTC, @NonNull TextView lblACC,
      @NonNull TextView lblBAT, @NonNull TextView lblButton, @NonNull TextView lblData,
      @NonNull TextView lblDeviceId, @NonNull TextView lblECG, @NonNull TextView lblHR,
      @NonNull TextView lblLog, @NonNull TextView lblPulse, @NonNull TextView lblRTC,
      @NonNull TextView lblSDCARD, @NonNull TextView lblStatus, @NonNull TextView lblTimeSpan,
      @NonNull TextView textRadioEvent) {
    this.rootView = rootView;
    this.buttonConnect = buttonConnect;
    this.buttonDisconnect = buttonDisconnect;
    this.buttonGetAcc = buttonGetAcc;
    this.buttonGetDeviceId = buttonGetDeviceId;
    this.buttonGetRTC = buttonGetRTC;
    this.buttonRequestData = buttonRequestData;
    this.buttonSearch = buttonSearch;
    this.buttonSetLabel = buttonSetLabel;
    this.buttonSetRTC = buttonSetRTC;
    this.lblACC = lblACC;
    this.lblBAT = lblBAT;
    this.lblButton = lblButton;
    this.lblData = lblData;
    this.lblDeviceId = lblDeviceId;
    this.lblECG = lblECG;
    this.lblHR = lblHR;
    this.lblLog = lblLog;
    this.lblPulse = lblPulse;
    this.lblRTC = lblRTC;
    this.lblSDCARD = lblSDCARD;
    this.lblStatus = lblStatus;
    this.lblTimeSpan = lblTimeSpan;
    this.textRadioEvent = textRadioEvent;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonConnect;
      Button buttonConnect = ViewBindings.findChildViewById(rootView, id);
      if (buttonConnect == null) {
        break missingId;
      }

      id = R.id.buttonDisconnect;
      Button buttonDisconnect = ViewBindings.findChildViewById(rootView, id);
      if (buttonDisconnect == null) {
        break missingId;
      }

      id = R.id.buttonGetAcc;
      Button buttonGetAcc = ViewBindings.findChildViewById(rootView, id);
      if (buttonGetAcc == null) {
        break missingId;
      }

      id = R.id.buttonGetDeviceId;
      Button buttonGetDeviceId = ViewBindings.findChildViewById(rootView, id);
      if (buttonGetDeviceId == null) {
        break missingId;
      }

      id = R.id.buttonGetRTC;
      Button buttonGetRTC = ViewBindings.findChildViewById(rootView, id);
      if (buttonGetRTC == null) {
        break missingId;
      }

      id = R.id.buttonRequestData;
      Button buttonRequestData = ViewBindings.findChildViewById(rootView, id);
      if (buttonRequestData == null) {
        break missingId;
      }

      id = R.id.buttonSearch;
      Button buttonSearch = ViewBindings.findChildViewById(rootView, id);
      if (buttonSearch == null) {
        break missingId;
      }

      id = R.id.buttonSetLabel;
      Button buttonSetLabel = ViewBindings.findChildViewById(rootView, id);
      if (buttonSetLabel == null) {
        break missingId;
      }

      id = R.id.buttonSetRTC;
      Button buttonSetRTC = ViewBindings.findChildViewById(rootView, id);
      if (buttonSetRTC == null) {
        break missingId;
      }

      id = R.id.lblACC;
      TextView lblACC = ViewBindings.findChildViewById(rootView, id);
      if (lblACC == null) {
        break missingId;
      }

      id = R.id.lblBAT;
      TextView lblBAT = ViewBindings.findChildViewById(rootView, id);
      if (lblBAT == null) {
        break missingId;
      }

      id = R.id.lblButton;
      TextView lblButton = ViewBindings.findChildViewById(rootView, id);
      if (lblButton == null) {
        break missingId;
      }

      id = R.id.lblData;
      TextView lblData = ViewBindings.findChildViewById(rootView, id);
      if (lblData == null) {
        break missingId;
      }

      id = R.id.lblDeviceId;
      TextView lblDeviceId = ViewBindings.findChildViewById(rootView, id);
      if (lblDeviceId == null) {
        break missingId;
      }

      id = R.id.lblECG;
      TextView lblECG = ViewBindings.findChildViewById(rootView, id);
      if (lblECG == null) {
        break missingId;
      }

      id = R.id.lblHR;
      TextView lblHR = ViewBindings.findChildViewById(rootView, id);
      if (lblHR == null) {
        break missingId;
      }

      id = R.id.lblLog;
      TextView lblLog = ViewBindings.findChildViewById(rootView, id);
      if (lblLog == null) {
        break missingId;
      }

      id = R.id.lblPulse;
      TextView lblPulse = ViewBindings.findChildViewById(rootView, id);
      if (lblPulse == null) {
        break missingId;
      }

      id = R.id.lblRTC;
      TextView lblRTC = ViewBindings.findChildViewById(rootView, id);
      if (lblRTC == null) {
        break missingId;
      }

      id = R.id.lblSDCARD;
      TextView lblSDCARD = ViewBindings.findChildViewById(rootView, id);
      if (lblSDCARD == null) {
        break missingId;
      }

      id = R.id.lblStatus;
      TextView lblStatus = ViewBindings.findChildViewById(rootView, id);
      if (lblStatus == null) {
        break missingId;
      }

      id = R.id.lblTimeSpan;
      TextView lblTimeSpan = ViewBindings.findChildViewById(rootView, id);
      if (lblTimeSpan == null) {
        break missingId;
      }

      id = R.id.textRadioEvent;
      TextView textRadioEvent = ViewBindings.findChildViewById(rootView, id);
      if (textRadioEvent == null) {
        break missingId;
      }

      return new MainBinding((LinearLayout) rootView, buttonConnect, buttonDisconnect, buttonGetAcc,
          buttonGetDeviceId, buttonGetRTC, buttonRequestData, buttonSearch, buttonSetLabel,
          buttonSetRTC, lblACC, lblBAT, lblButton, lblData, lblDeviceId, lblECG, lblHR, lblLog,
          lblPulse, lblRTC, lblSDCARD, lblStatus, lblTimeSpan, textRadioEvent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
